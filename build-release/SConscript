from platform import system
from os import listdir
from subprocess import call
import os

print("System is "+ system());
target = "genmodelgem"

cppdefines = []
if (system() == "Windows"):
   cppdefines.append("WIN64")
elif (system() == "Linux"):
   cppdefines.append("Linux")
elif (system() == "Darwin"):
   cppdefines.append("Darwin")

cxxflags = {
    "Linux": "-g -O2 -Wall -pthread -fmessage-length=0", #-std=c++11",
    "Windows": "/O2 /MD /EHsc",
    "Darwin": "-g -O2 -m64 -Wall -pthread -fmessage-length=0 -std=c++11",
    }

cpppath = [os.environ['HOME']+"/.rvm/rubies/ruby-1.9.3-p392/include/ruby-1.9.1", os.environ['HOME']+"/.rvm/rubies/ruby-1.9.3-p392/include/ruby-1.9.1/x86_64-darwin13.0.2"]
           #r"/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7",
if (system() == "Linux"):
    cpppath = ["/usr/local/include/ruby-1.9.1", "/usr/local/include/ruby-1.9.1/x86_64-linux", "/usr/include/ruby-1.9.1", "/usr/include/ruby-1.9.1/x86_64-linux"]

libpath = [os.environ['HOME']+"/.rvm/rubies/ruby-1.9.3-p392/lib"] 
           #,"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/"]
if (system() == "Linux"):
    libpath = []

libs = ["ruby"]
if (system() == "Linux"):
   libs = ["ruby-static", "pthread", "m", "crypt", "dl"]

# Create an environmnet
env = Environment(TARGET_ARCH = "x86_64",
    CPPPATH = cpppath,
    LIBPATH = libpath,
    LIBS = libs,
    CXXFLAGS = cxxflags[system()],
    CPPDEFINES = cppdefines
    )

# Change the build folder output
#env.VariantDir("build-release", "src", duplicate = 0)

files = Glob("*.cpp")

# Build the library
call(["swig","-ruby","-o","../src/GenModelGem_ruby.cpp","-c++","../src/GenModelGem.i"])
env.SharedLibrary(target = "../lib/" + target, source = files)

print("building gem file")
call(["gem", "build", "genmodel.gemspec"])
call(["mv", "genmodel-0.0.16.gem", "../lib/genmodel-0.0.16.gem"])
print("done")